{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/React/atm-react/src/StatsViewer.js\";\nimport React from 'react';\nimport './index.css';\nimport { Database } from './model/database';\nimport { Utils } from './model/utils';\nexport var StatsViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatsViewer, _React$Component);\n\n  function StatsViewer(props) {\n    var _this;\n\n    _classCallCheck(this, StatsViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatsViewer).call(this, props));\n    _this.state = {\n      compName: \"Stats\",\n      listTab1: []\n    };\n    return _this;\n  }\n\n  _createClass(StatsViewer, [{\n    key: \"fetchTable\",\n    value: function fetchTable() {\n      var context = this;\n      var list = [];\n      var u = new Utils();\n      var db = new Database();\n      var filter = {\n        \"startingDate\": u.getDate()\n      };\n      var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n      r.then(function (response) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = response.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var json = _step.value;\n            list.push(json);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        context.setState({\n          listTab1: list\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.listTab1);\n\n      if (this.state.listTab1) {\n        var header = React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"ID\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Task\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Priority\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Days to deadline\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Priority Index\"));\n        var rows = this.state.listTab1.map(function (val) {\n          return React.createElement(\"tr\", {\n            key: val.id_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, val.id_task), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, val.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, val.priority), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, val.deadline), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, val.index));\n        });\n        return React.createElement(\"div\", {\n          className: \"tableWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table table-responsive table-condensed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, header), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, rows)));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Stats\");\n      }\n    }\n  }]);\n\n  return StatsViewer;\n}(React.Component);\nexport default StatsViewer;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/StatsViewer.js"],"names":["React","Database","Utils","StatsViewer","props","state","compName","listTab1","context","list","u","db","filter","getDate","r","sendRequest","then","response","data","json","push","setState","catch","error","console","log","fetchTable","header","rows","map","val","id_task","description","priority","deadline","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Database } from './model/database';\nimport { Utils } from './model/utils';\n\nexport class StatsViewer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"Stats\",\n            listTab1: []\n        }\n    }\n\n    fetchTable() {\n        var context = this;\n        var list = [];\n        var u = new Utils();\n        var db = new Database();\n        var filter = { \"startingDate\": u.getDate() };\n        var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n        r.then(function (response) {\n            for (var json of response.data) {\n                list.push(json);\n            }\n            context.setState({\n                listTab1: list\n            });\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n        this.fetchTable();\n    }\n\n    render() {\n        console.log(this.state.listTab1);\n        if (this.state.listTab1) {\n            var header = <tr>\n                <th>ID</th>\n                <th>Task</th>\n                <th>Priority</th>\n                <th>Days to deadline</th>\n                <th>Priority Index</th>\n            </tr>;\n            var rows = this.state.listTab1.map((val) => {\n                return <tr key={val.id_task}>\n                    <td>{val.id_task}</td>\n                    <td>{val.description}</td>\n                    <td>{val.priority}</td>\n                    <td>{val.deadline}</td>\n                    <td>{val.index}</td>\n                </tr>\n            });\n            return <div className=\"tableWrapper\">\n                <table className=\"table table-responsive table-condensed\">\n                    <thead>\n                        {header}\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        } else {\n            return <div>Stats</div>\n        }\n    }\n}\n\nexport default StatsViewer;"]},"metadata":{},"sourceType":"module"}