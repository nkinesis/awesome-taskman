{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/React/atm-react/src/components/TaskSearch.js\";\nimport React from 'react';\nimport { Database } from '../model/database.js';\nimport { Select } from '../model/select.js';\nimport { TaskList } from './TaskList.js';\nimport { TaskForm } from './TaskForm.js';\nimport { Task } from '../model/task.js';\nimport { Utils } from '../model/utils.js';\nimport '../index.css';\nexport var TaskSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskSearch, _React$Component);\n\n  function TaskSearch(props) {\n    var _this;\n\n    _classCallCheck(this, TaskSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskSearch).call(this, props));\n    _this.state = {\n      compName: \"Search\",\n      objList: null,\n      sDate: null,\n      sName: null\n    };\n    _this.getTasks = _this.getTasks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaskSearch, [{\n    key: \"getTasks\",\n    value: function getTasks() {\n      var db = new Database();\n      var ctx = this;\n      var params = new Select(\"status = 0\", 10, \"dueDate desc\");\n      db.select(\"Task\", params).then(function (response) {\n        ctx.setState({\n          objList: [response]\n        });\n      });\n    }\n  }, {\n    key: \"completeTask\",\n    value: function completeTask(e) {\n      var selId = e.target.parentNode.getAttribute(\"idtask\");\n\n      if (selId) {\n        var db = new Database();\n        var ctx = this;\n        var updObj;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.state.objList[0].data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var task = _step.value;\n\n            if (task.id_task === Number.parseInt(selId)) {\n              updObj = task;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (updObj && updObj.status === 0) {\n          updObj.status = \"1\";\n          db.update(\"Task\", updObj).then(function (response) {\n            console.log(response);\n            ctx.getTasks();\n          });\n        } else {\n          window.alert(\"This task has already been finished.\");\n        }\n      }\n    }\n  }, {\n    key: \"removeTask\",\n    value: function removeTask(e) {\n      if (window.confirm('Are you sure you want to delete this task?')) {\n        var selId = e.target.parentNode.getAttribute(\"idtask\");\n\n        if (selId) {\n          var db = new Database();\n          var delObj = new Task(\"\", 1, 1, \"\", selId);\n          var ctx = this;\n          db.delete(\"Task\", delObj).then(function (response) {\n            console.log(response);\n            ctx.getTasks();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(e) {\n      if (e.target.id === \"sDate\") {\n        this.setState = {\n          sDate: e.target.value\n        };\n      } else if (e.target.id === \"sName\") {\n        this.setState = {\n          sName: e.target.value\n        };\n      }\n    }\n  }, {\n    key: \"formKeyPress\",\n    value: function formKeyPress(e) {\n      if (e.key === \"Enter\") {\n        if (e.target.id === \"sDate\") {\n          document.querySelector(\"#sName\").focus();\n        } else if (e.target.id === \"sName\") {\n          document.querySelector(\"#sFinish\").focus();\n        } else if (e.target.id === \"sFinish\") {\n          document.querySelector(\"#sDate\").focus();\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTasks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.objList) {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Search By Date\"), React.createElement(\"input\", {\n          autoFocus: true,\n          id: \"sDate\",\n          className: \"form-control\",\n          type: \"date\",\n          onChange: this.formChange,\n          onKeyPress: this.formKeyPress,\n          value: this.state.sDate,\n          max: \"2099-12-31\",\n          min: \"2001-01-01\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Search By Name\"), React.createElement(\"input\", {\n          id: \"sName\",\n          className: \"form-control\",\n          type: \"text\",\n          onChange: this.formChange,\n          onKeyPress: this.formKeyPress,\n          value: this.state.sName,\n          maxLength: \"20\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"form-group form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"sFinish\",\n          class: \"form-check-input\",\n          type: \"checkbox\",\n          onKeyPress: this.formKeyPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          class: \"form-check-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Show finished\"))), React.createElement(TaskList, {\n          objList: this.state.objList[0].data,\n          removeTask: function removeTask(fn) {\n            return _this2.removeTask(fn);\n          },\n          completeTask: function completeTask(fn) {\n            return _this2.completeTask(fn);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }]);\n\n  return TaskSearch;\n}(React.Component);\nexport default TaskSearch;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/components/TaskSearch.js"],"names":["React","Database","Select","TaskList","TaskForm","Task","Utils","TaskSearch","props","state","compName","objList","sDate","sName","getTasks","bind","db","ctx","params","select","then","response","setState","e","selId","target","parentNode","getAttribute","updObj","data","task","id_task","Number","parseInt","status","update","console","log","window","alert","confirm","delObj","delete","id","value","key","document","querySelector","focus","formChange","formKeyPress","fn","removeTask","completeTask","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Database } from '../model/database.js';\nimport { Select } from '../model/select.js';\nimport { TaskList } from './TaskList.js';\nimport { TaskForm } from './TaskForm.js';\nimport { Task } from '../model/task.js';\nimport { Utils } from '../model/utils.js';\nimport '../index.css';\n\nexport class TaskSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"Search\",\n            objList: null,\n            sDate: null,\n            sName: null\n        }\n        this.getTasks = this.getTasks.bind(this);\n    }\n\n    getTasks() {\n        var db = new Database();\n        var ctx = this;\n        var params = new Select(\"status = 0\", 10, \"dueDate desc\");\n        db.select(\"Task\", params).then(function (response) {\n            ctx.setState({\n                objList: [response]\n            });\n        });\n    }\n\n    completeTask(e) {\n        var selId = e.target.parentNode.getAttribute(\"idtask\");\n        if (selId) {\n            var db = new Database();\n            var ctx = this;\n            var updObj;\n            for (var task of this.state.objList[0].data) {\n                if (task.id_task === Number.parseInt(selId)) {\n                    updObj = task;\n                    break;\n                }\n            }\n            if (updObj && updObj.status === 0) {\n                updObj.status = \"1\";\n                db.update(\"Task\", updObj).then(\n                    function (response) {\n                        console.log(response);\n                        ctx.getTasks();\n                    }\n                );\n            } else {\n                window.alert(\"This task has already been finished.\")\n            }\n        }\n    }\n\n    removeTask(e) {\n        if (window.confirm('Are you sure you want to delete this task?')) {\n            var selId = e.target.parentNode.getAttribute(\"idtask\");\n            if (selId) {\n                var db = new Database();\n                var delObj = new Task(\"\", 1, 1, \"\", selId);\n                var ctx = this;\n                db.delete(\"Task\", delObj).then(\n                    function (response) {\n                        console.log(response);\n                        ctx.getTasks();\n                    }\n                );\n            }\n        }\n    }\n\n    formChange(e){\n        if (e.target.id === \"sDate\"){\n            this.setState={sDate: e.target.value};\n        } else if (e.target.id === \"sName\"){\n            this.setState={sName: e.target.value};\n        }  \n    }\n\n    formKeyPress(e){\n        if (e.key === \"Enter\"){\n            if (e.target.id === \"sDate\"){\n                document.querySelector(\"#sName\").focus();\n            } else if (e.target.id === \"sName\"){\n                document.querySelector(\"#sFinish\").focus();\n            } else if (e.target.id === \"sFinish\"){\n                document.querySelector(\"#sDate\").focus();\n            } \n        }\n    }\n\n    componentDidMount() {    \n        this.getTasks();\n    }\n\n    render() {\n        if (this.state.objList) {\n            return <div className=\"mainWrapper\">\n                <div className=\"form-group\">\n                    <label>Search By Date</label>\n                    <input autoFocus id=\"sDate\" className=\"form-control\"\n                        type=\"date\" onChange={this.formChange}\n                        onKeyPress={this.formKeyPress}\n                        value={this.state.sDate}\n                        max=\"2099-12-31\" min=\"2001-01-01\"\n                    ></input>\n                    <label>Search By Name</label>\n                    <input id=\"sName\" className=\"form-control\"\n                        type=\"text\" onChange={this.formChange}\n                        onKeyPress={this.formKeyPress}\n                        value={this.state.sName}\n                        maxLength=\"20\"\n                    ></input>\n                    <div class=\"form-group form-check\">\n                        <input id=\"sFinish\" class=\"form-check-input\" \n                         type=\"checkbox\" onKeyPress={this.formKeyPress}></input>\n                        <label class=\"form-check-label\">Show finished</label>\n                    </div>\n                </div>\n                <TaskList\n                    objList={this.state.objList[0].data}\n                    removeTask={fn => this.removeTask(fn)}\n                    completeTask={fn => this.completeTask(fn)}\n                ></TaskList>\n            </div>\n        } else {\n            return <div className=\"mainWrapper\">\n                Loading...\n        </div>\n        }\n\n    }\n}\n\nexport default TaskSearch;"]},"metadata":{},"sourceType":"module"}