{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/src/components/StatsViewer.js\";\nimport React from 'react';\nimport '../index.css';\nimport { Database } from '../model/database';\nimport { Utils } from '../model/utils';\nexport var StatsViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatsViewer, _React$Component);\n\n  function StatsViewer(props) {\n    var _this;\n\n    _classCallCheck(this, StatsViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatsViewer).call(this, props));\n    _this.state = {\n      compName: \"Stats\",\n      listTabIndex: [],\n      listTabOverdue: []\n    };\n    _this.fetchIndexTable = _this.fetchIndexTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchOverdueTable = _this.fetchOverdueTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createIndexTable = _this.createIndexTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createOverdueTable = _this.createOverdueTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StatsViewer, [{\n    key: \"validateArray\",\n    value: function validateArray(arr) {\n      return arr && arr.length > 0 && arr[0] && arr[0].length > 1;\n    }\n  }, {\n    key: \"createEmptyRow\",\n    value: function createEmptyRow() {\n      return React.createElement(\"tr\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"No records to show.\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"fetchIndexTable\",\n    value: function fetchIndexTable() {\n      var context = this;\n      var list = [];\n      var u = new Utils();\n      var db = new Database();\n      var filter = {\n        \"startingDate\": u.getDate()\n      };\n      var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n      r.then(function (response) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = response.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var json = _step.value;\n            list.push(json);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        context.setState({\n          listTabIndex: list\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"fetchOverdueTable\",\n    value: function fetchOverdueTable() {\n      var context = this;\n      var list = [];\n      var u = new Utils();\n      var db = new Database();\n      var filter = {\n        \"startingDate\": u.getDate()\n      };\n      var r = db.sendRequest(\"GraphController\", \"getOverdueGraph\", filter);\n      r.then(function (response) {\n        console.log(response);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = response.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var json = _step2.value;\n            list.push(json);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        context.setState({\n          listTabOverdue: list\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"createIndexTable\",\n    value: function createIndexTable() {\n      var header = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Task\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Days to deadline\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Priority Index\"));\n      var rows = this.createEmptyRow();\n\n      if (this.validateArray(this.state.listTabIndex)) {\n        rows = this.state.listTabIndex.map(function (val) {\n          return React.createElement(\"tr\", {\n            key: val.id_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, val.id_task), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, val.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, val.priority), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, val.deadline), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, val.index));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Tasks by Priority Index (next 7 days)\"), React.createElement(\"div\", {\n        className: \"tableWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-responsive table-condensed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, header), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, rows))));\n    }\n  }, {\n    key: \"createOverdueTable\",\n    value: function createOverdueTable() {\n      var header = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Task\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Due Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Days overdue\"));\n      var rows = this.createEmptyRow();\n\n      if (this.validateArray(this.state.listTabOverdue)) {\n        rows = this.state.listTabOverdue.map(function (val) {\n          return React.createElement(\"tr\", {\n            key: val.id_task,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, val.id_task), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, val.description), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, val.priority), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, val.deadline), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, val.overdue));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Tasks Overdue (last 100 tasks)\"), React.createElement(\"div\", {\n        className: \"tableWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-responsive table-condensed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, header), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, rows))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchIndexTable();\n      this.fetchOverdueTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.listTabIndex && this.state.listTabOverdue) {\n        var tb1 = this.createIndexTable();\n        var tb2 = this.createOverdueTable();\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, tb1, tb2);\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }]);\n\n  return StatsViewer;\n}(React.Component);\nexport default StatsViewer;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/Angular/TaskManager/client/react/src/components/StatsViewer.js"],"names":["React","Database","Utils","StatsViewer","props","state","compName","listTabIndex","listTabOverdue","fetchIndexTable","bind","fetchOverdueTable","createIndexTable","createOverdueTable","arr","length","context","list","u","db","filter","getDate","r","sendRequest","then","response","data","json","push","setState","catch","error","console","log","header","rows","createEmptyRow","validateArray","map","val","id_task","description","priority","deadline","index","overdue","tb1","tb2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport { Database } from '../model/database';\nimport { Utils } from '../model/utils';\n\nexport class StatsViewer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"Stats\",\n            listTabIndex: [],\n            listTabOverdue: []\n        }\n        this.fetchIndexTable = this.fetchIndexTable.bind(this);\n        this.fetchOverdueTable = this.fetchOverdueTable.bind(this);\n        this.createIndexTable = this.createIndexTable.bind(this);\n        this.createOverdueTable = this.createOverdueTable.bind(this);\n    }\n\n    validateArray(arr){\n        return arr && (arr.length > 0) && arr[0] && (arr[0].length > 1);\n    }\n\n    createEmptyRow(){\n        return <tr className=\"list-group\">\n            <td>No records to show.</td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n        </tr>\n    }\n\n    fetchIndexTable() {\n        var context = this;\n        var list = [];\n        var u = new Utils();\n        var db = new Database();\n        var filter = { \"startingDate\": u.getDate() };\n        var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n        r.then(function (response) {\n            for (var json of response.data) {\n                list.push(json);\n            }\n            context.setState({\n                listTabIndex: list\n            });\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    fetchOverdueTable() {\n        var context = this;\n        var list = [];\n        var u = new Utils();\n        var db = new Database();\n        var filter = { \"startingDate\": u.getDate() };\n        var r = db.sendRequest(\"GraphController\", \"getOverdueGraph\", filter);\n        r.then(function (response) {\n            console.log(response);\n            for (var json of response.data) {\n                list.push(json);\n            }\n            context.setState({\n                listTabOverdue: list\n            });\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    createIndexTable() {\n        var header = <tr>\n            <th>ID</th>\n            <th>Task</th>\n            <th>Priority</th>\n            <th>Days to deadline</th>\n            <th>Priority Index</th>\n        </tr>;\n        var rows = this.createEmptyRow();\n        if (this.validateArray(this.state.listTabIndex)) {\n            rows = this.state.listTabIndex.map((val) => {\n                return <tr key={val.id_task}>\n                    <td>{val.id_task}</td>\n                    <td>{val.description}</td>\n                    <td>{val.priority}</td>\n                    <td>{val.deadline}</td>\n                    <td>{val.index}</td>\n                </tr>\n            });\n        }\n\n\n        return (<div><h2>Tasks by Priority Index (next 7 days)</h2>\n            <div className=\"tableWrapper\">\n                <table className=\"table table-responsive table-condensed\">\n                    <thead>\n                        {header}\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div></div>);\n    }\n\n    createOverdueTable() {\n        var header = <tr>\n            <th>ID</th>\n            <th>Task</th>\n            <th>Priority</th>\n            <th>Due Date</th>\n            <th>Days overdue</th>\n        </tr>;\n        var rows = this.createEmptyRow();\n        if (this.validateArray(this.state.listTabOverdue)) {\n            rows = this.state.listTabOverdue.map((val) => {\n                return <tr key={val.id_task}>\n                    <td>{val.id_task}</td>\n                    <td>{val.description}</td>\n                    <td>{val.priority}</td>\n                    <td>{val.deadline}</td>\n                    <td>{val.overdue}</td>\n                </tr>\n            });\n        }\n        return (<div><h2>Tasks Overdue (last 100 tasks)</h2>\n            <div className=\"tableWrapper\">\n                <table className=\"table table-responsive table-condensed\">\n                    <thead>\n                        {header}\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div></div>);\n    }\n\n    componentDidMount() {\n        this.fetchIndexTable();\n        this.fetchOverdueTable();\n    }\n\n    render() {\n        if (this.state.listTabIndex && this.state.listTabOverdue) {\n            var tb1 = this.createIndexTable();\n            var tb2 = this.createOverdueTable();\n            return <div className=\"mainWrapper\">\n                {tb1}\n                {tb2}\n            </div>\n        } else {\n            return <div className=\"mainWrapper\">Loading...</div>\n        }\n    }\n}\n\nexport default StatsViewer;"]},"metadata":{},"sourceType":"module"}