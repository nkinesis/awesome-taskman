{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/React/atm-react/src/components/TaskSearch.js\";\nimport React from 'react';\nimport { Database } from '../model/database.js';\nimport { Select } from '../model/select.js';\nimport { TaskList } from './TaskList.js';\nimport { TaskForm } from './TaskForm.js';\nimport { Task } from '../model/task.js';\nimport { Utils } from '../model/utils.js';\nimport '../index.css';\nexport var TaskSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskSearch, _React$Component);\n\n  function TaskSearch(props) {\n    var _this;\n\n    _classCallCheck(this, TaskSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskSearch).call(this, props));\n    _this.state = {\n      compName: \"Search\",\n      objList: []\n    };\n    _this.getTasks = _this.getTasks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TaskSearch, [{\n    key: \"getTasks\",\n    value: function getTasks() {\n      var db = new Database();\n      var ctx = this;\n      var params = new Select(\"status = 0\", 10, \"dueDate desc\");\n      db.select(\"Task\", params).then(function (response) {\n        ctx.setState({\n          objList: [response]\n        });\n      });\n    }\n  }, {\n    key: \"completeTask\",\n    value: function completeTask(e) {\n      var selId = e.target.parentNode.getAttribute(\"idtask\");\n\n      if (selId) {\n        var db = new Database();\n        var ctx = this;\n        var updObj;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.state.objList[0].data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var task = _step.value;\n\n            if (task.id_task === Number.parseInt(selId)) {\n              updObj = task;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (updObj && updObj.status === 0) {\n          updObj.status = \"1\";\n          db.update(\"Task\", updObj).then(function (response) {\n            console.log(response);\n            ctx.getTasks();\n          });\n        } else {\n          window.alert(\"This task has already been finished.\");\n        }\n      }\n    }\n  }, {\n    key: \"removeTask\",\n    value: function removeTask(e) {\n      if (window.confirm('Are you sure you want to delete this task?')) {\n        var selId = e.target.parentNode.getAttribute(\"idtask\");\n\n        if (selId) {\n          var db = new Database();\n          var delObj = new Task(\"\", 1, 1, \"\", selId);\n          var ctx = this;\n          db.delete(\"Task\", delObj).then(function (response) {\n            console.log(response);\n            ctx.getTasks();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"mainWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Test\"), React.createElement(TaskList, {\n        objList: this.state.objList[0].data,\n        removeTask: function removeTask(fn) {\n          return _this2.removeTask(fn);\n        },\n        completeTask: function completeTask(fn) {\n          return _this2.completeTask(fn);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TaskSearch;\n}(React.Component);\nexport default TaskSearch;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/components/TaskSearch.js"],"names":["React","Database","Select","TaskList","TaskForm","Task","Utils","TaskSearch","props","state","compName","objList","getTasks","bind","db","ctx","params","select","then","response","setState","e","selId","target","parentNode","getAttribute","updObj","data","task","id_task","Number","parseInt","status","update","console","log","window","alert","confirm","delObj","delete","fn","removeTask","completeTask","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Database } from '../model/database.js';\nimport { Select } from '../model/select.js';\nimport { TaskList } from './TaskList.js';\nimport { TaskForm } from './TaskForm.js';\nimport { Task } from '../model/task.js';\nimport { Utils } from '../model/utils.js';\nimport '../index.css';\n\nexport class TaskSearch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"Search\",\n            objList: [],\n        }\n        this.getTasks = this.getTasks.bind(this);\n    }\n\n    getTasks() {\n        var db = new Database();\n        var ctx = this;\n        var params = new Select(\"status = 0\", 10, \"dueDate desc\");\n        db.select(\"Task\", params).then(function (response) {\n            ctx.setState({\n                objList: [response]\n            });\n        });\n    }\n\n    completeTask(e) {\n        var selId = e.target.parentNode.getAttribute(\"idtask\");\n        if (selId) {\n            var db = new Database();\n            var ctx = this;\n            var updObj;\n            for (var task of this.state.objList[0].data) {\n                if (task.id_task === Number.parseInt(selId)) {\n                    updObj = task;\n                    break;\n                }\n            }\n            if (updObj && updObj.status === 0) {\n                updObj.status = \"1\";\n                db.update(\"Task\", updObj).then(\n                    function (response) {\n                        console.log(response);\n                        ctx.getTasks();\n                    }\n                );\n            } else {\n                window.alert(\"This task has already been finished.\")\n            }\n        }\n    }\n\n    removeTask(e) {\n        if (window.confirm('Are you sure you want to delete this task?')) {\n            var selId = e.target.parentNode.getAttribute(\"idtask\");\n            if (selId) {\n                var db = new Database();\n                var delObj = new Task(\"\", 1, 1, \"\", selId);\n                var ctx = this;\n                db.delete(\"Task\", delObj).then(\n                    function (response) {\n                        console.log(response);\n                        ctx.getTasks();\n                    }\n                );\n            }\n        }\n    }\n\n    render() {\n        return <div className=\"mainWrapper\">\n            <div>Test</div>\n            <TaskList\n                objList={this.state.objList[0].data}\n                removeTask={fn => this.removeTask(fn)}\n                completeTask={fn => this.completeTask(fn)}\n            ></TaskList>\n        </div>\n    }\n}\n\nexport default TaskSearch;"]},"metadata":{},"sourceType":"module"}