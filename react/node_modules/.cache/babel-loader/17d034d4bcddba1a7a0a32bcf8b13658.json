{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/React/atm-react/src/UserForm.js\";\nimport React from 'react';\nimport './index.css';\nimport { Database } from './model/database.js';\nimport { Select } from './model/select.js';\nexport var UserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserForm, _React$Component);\n\n  function UserForm(props) {\n    var _this;\n\n    _classCallCheck(this, UserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserForm).call(this, props));\n    _this.state = {\n      compName: \"User\",\n      objForm: null\n    };\n    _this.getUser = _this.getUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserForm, [{\n    key: \"getUser\",\n    value: function getUser() {\n      var db = new Database();\n      var ctx = this;\n      var params = new Select(\"id = 1\", 1, \"\");\n      db.select(\"User\", params).then(function (response) {\n        console.log(response.data);\n        ctx.setState({\n          objForm: response.data[0]\n        });\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      var context = this;\n\n      if (checkPassword()) {\n        context.db.submit(context).then(function (response) {\n          console.log(response);\n          context.getUser();\n        }).catch(function (error) {\n          console.log(error);\n          context.getUser();\n        });\n      } else {\n        alert(\"The password MUST have:\\n\" + \"- At least 6 characters\\n\" + \"- Upper case and lower case characters\\n\");\n      }\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(e) {\n      var updObj = this.state.objForm;\n\n      if (e.target.id === \"username\") {\n        updObj.username = e.target.value;\n      } else if (e.target.id === \"pwd\") {\n        updObj.password = e.target.value;\n      }\n\n      this.setState({\n        objForm: updObj\n      });\n    }\n  }, {\n    key: \"testConnection\",\n    value: function testConnection() {\n      var db = new Database();\n      db.testConnection();\n    }\n  }, {\n    key: \"checkPassword\",\n    value: function checkPassword() {\n      var pwd = this.entity.password;\n      var regexp = new RegExp('(?=.*[a-z])(?=.*[A-Z])');\n      var conditions = regexp.test(pwd);\n      return pwd.length >= 6 && conditions;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.objForm) {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Email\"), React.createElement(\"input\", {\n          id: \"email\",\n          className: \"form-control\",\n          type: \"text\",\n          readOnly: true,\n          defaultValue: this.state.objForm.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Creation Date\"), React.createElement(\"input\", {\n          id: \"cDate\",\n          className: \"form-control\",\n          type: \"date\",\n          readOnly: true,\n          defaultValue: this.state.objForm.creationDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Username\"), React.createElement(\"input\", {\n          id: \"username\",\n          className: \"form-control\",\n          type: \"text\",\n          defaultValue: this.state.objForm.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Password\"), React.createElement(\"input\", {\n          id: \"pwd\",\n          className: \"form-control\",\n          type: \"password\",\n          defaultValue: this.state.objForm.password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.submitForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Submit\"), React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.testConnection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Test Connection\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }]);\n\n  return UserForm;\n}(React.Component);\nexport default UserForm;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/UserForm.js"],"names":["React","Database","Select","UserForm","props","state","compName","objForm","getUser","bind","db","ctx","params","select","then","response","console","log","data","setState","context","checkPassword","submit","catch","error","alert","e","updObj","target","id","username","value","password","testConnection","pwd","entity","regexp","RegExp","conditions","test","length","email","creationDate","submitForm","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Database } from './model/database.js';\nimport { Select } from './model/select.js';\n\nexport class UserForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"User\",\n            objForm: null\n        }\n        this.getUser = this.getUser.bind(this);\n    }\n\n    getUser() {\n        var db = new Database();\n        var ctx = this;\n        var params = new Select(\"id = 1\", 1, \"\");\n        db.select(\"User\", params).then(function (response) {\n            console.log(response.data);\n            ctx.setState({\n                objForm: response.data[0]\n            });\n        });\n    }\n\n    submitForm(){\n        var context = this;\n        if (checkPassword()) {\n          context.db.submit(context)\n            .then(function (response) {\n              console.log(response);\n              context.getUser();\n            })\n            .catch(function (error) {\n              console.log(error);\n              context.getUser();\n            });\n        } else {\n          alert(\"The password MUST have:\\n\" +\n            \"- At least 6 characters\\n\" +\n            \"- Upper case and lower case characters\\n\");\n        }\n    }\n\n    formChange(e) {\n        var updObj = this.state.objForm;\n        if (e.target.id === \"username\") {\n            updObj.username = e.target.value;\n        } else if (e.target.id === \"pwd\") {\n            updObj.password = e.target.value;\n        }\n        this.setState({\n            objForm: updObj\n        });\n    }\n\n    testConnection(){\n        var db = new Database();\n        db.testConnection();\n    }\n\n    checkPassword() {\n        var pwd = this.entity.password;\n        var regexp = new RegExp('(?=.*[a-z])(?=.*[A-Z])');\n        var conditions = regexp.test(pwd);\n        return pwd.length >= 6 && conditions;\n      }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    render() {\n        if (this.state.objForm) {\n            return (\n                <div className=\"mainWrapper\">\n                    <div className=\"form-group\">\n                        <label>Email</label>\n                        <input id=\"email\" className=\"form-control\"\n                            type=\"text\" readOnly defaultValue={this.state.objForm.email}></input>\n\n                        <label>Creation Date</label>\n                        <input id=\"cDate\" className=\"form-control\"\n                            type=\"date\" readOnly defaultValue={this.state.objForm.creationDate}></input>\n\n                        <label>Username</label>\n                        <input id=\"username\" className=\"form-control\"\n                            type=\"text\" defaultValue={this.state.objForm.username}></input>\n\n                        <label>Password</label>\n                        <input id=\"pwd\" className=\"form-control\"\n                            type=\"password\" defaultValue={this.state.objForm.password}></input>\n                    </div>\n                    <button className=\"btn btn-primary\" onClick={this.submitForm}>Submit</button>\n                    <button className=\"btn btn-primary\" onClick={this.testConnection}>Test Connection</button>\n                </div>\n            );\n        } else {\n            return <div className=\"mainWrapper\">Loading...</div>\n        }\n    }\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}