{"ast":null,"code":"import _defineProperty from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { Task } from './task.js';\nimport { Wrapper } from './wrapper.js';\nimport { Select } from './select.js';\nexport var Database =\n/*#__PURE__*/\nfunction () {\n  function Database() {\n    _classCallCheck(this, Database);\n  }\n\n  _createClass(Database, [{\n    key: \"select\",\n    value: function select(storeName, params) {\n      if (!params) {\n        var cond = \"id > 0\";\n        params = new Select(cond, 10);\n      }\n\n      return this.sendRequest(storeName + \"Controller\", \"select\", params);\n    }\n  }, {\n    key: \"submit\",\n    value: function submit(storeName, entity) {\n      var result;\n      console.log(entity[\"id_\" + storeName.toLowerCase()]);\n\n      if (entity[\"id_\" + storeName.toLowerCase()]) {\n        result = this.sendRequest(storeName + \"Controller\", \"update\", entity);\n      } else {\n        result = this.sendRequest(storeName + \"Controller\", \"insert\", entity);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"update\",\n    value: function update(storeName, entity) {\n      if (entity) {\n        return this.sendRequest(storeName + \"Controller\", \"update\", entity);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(storeName, entity) {\n      //var c = confirm(\"Are you sure you want to delete?\\nThis action cannot be undone.\");\n      var c = true;\n\n      if (c) {\n        var idParam = \"id_\" + storeName.toLowerCase();\n\n        var params = _defineProperty({}, idParam, entity[idParam]);\n\n        return this.sendRequest(storeName + \"Controller\", \"delete\", params);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest(cls, mtd, json) {\n      var wrapper = new Wrapper(cls, mtd, []);\n      wrapper.datalist.push(json); //var axios = require('axios');\n\n      return axios.get('http://localhost:8080/TaskMgmt/Controller?data=' + encodeURIComponent(JSON.stringify(wrapper)));\n    }\n  }, {\n    key: \"mockSelect\",\n    value: function mockSelect() {\n      var list = [new Task(\"Do work\", 1, 1, \"20180101\", 1, 0), new Task(\"Test app\", 1, 1, \"20190822\", 2, 0), new Task(\"Code TypeScript\", 1, 1, \"20190111\", 3, 0)];\n      return list;\n    }\n  }, {\n    key: \"testConnection\",\n    value: function testConnection() {\n      var result = this.sendRequest(\"TestController\", \"ping\", {});\n      result.then(function (response) {\n        alert(response.data);\n      }).catch(function (error) {\n        alert(error);\n      });\n    }\n  }]);\n\n  return Database;\n}();","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/model/database.js"],"names":["axios","Task","Wrapper","Select","Database","storeName","params","cond","sendRequest","entity","result","console","log","toLowerCase","c","idParam","cls","mtd","json","wrapper","datalist","push","get","encodeURIComponent","JSON","stringify","list","then","response","alert","data","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAGA,WAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2BAEWC,SAFX,EAEsBC,MAFtB,EAE8B;AACtB,UAAI,CAACA,MAAL,EAAa;AACT,YAAIC,IAAI,GAAG,QAAX;AACAD,QAAAA,MAAM,GAAG,IAAIH,MAAJ,CAAWI,IAAX,EAAiB,EAAjB,CAAT;AACH;;AACD,aAAO,KAAKC,WAAL,CAAiBH,SAAS,GAAG,YAA7B,EAA2C,QAA3C,EAAqDC,MAArD,CAAP;AACH;AARL;AAAA;AAAA,2BAUWD,SAVX,EAUsBI,MAVtB,EAU8B;AACtB,UAAIC,MAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAAC,QAAQJ,SAAS,CAACQ,WAAV,EAAT,CAAlB;;AACA,UAAIJ,MAAM,CAAC,QAAQJ,SAAS,CAACQ,WAAV,EAAT,CAAV,EAA6C;AACzCH,QAAAA,MAAM,GAAG,KAAKF,WAAL,CAAiBH,SAAS,GAAG,YAA7B,EAA2C,QAA3C,EAAqDI,MAArD,CAAT;AACH,OAFD,MAEO;AACHC,QAAAA,MAAM,GAAG,KAAKF,WAAL,CAAiBH,SAAS,GAAG,YAA7B,EAA2C,QAA3C,EAAqDI,MAArD,CAAT;AACH;;AACD,aAAOC,MAAP;AACH;AAnBL;AAAA;AAAA,2BAqBWL,SArBX,EAqBsBI,MArBtB,EAqB8B;AACtB,UAAIA,MAAJ,EAAY;AACR,eAAO,KAAKD,WAAL,CAAiBH,SAAS,GAAG,YAA7B,EAA2C,QAA3C,EAAqDI,MAArD,CAAP;AACH;AACJ;AAzBL;AAAA;AAAA,4BA2BWJ,SA3BX,EA2BsBI,MA3BtB,EA2B8B;AACtB;AACA,UAAIK,CAAC,GAAG,IAAR;;AACA,UAAIA,CAAJ,EAAO;AACH,YAAIC,OAAO,GAAG,QAAQV,SAAS,CAACQ,WAAV,EAAtB;;AACA,YAAIP,MAAM,uBACLS,OADK,EACKN,MAAM,CAACM,OAAD,CADX,CAAV;;AAGA,eAAO,KAAKP,WAAL,CAAiBH,SAAS,GAAG,YAA7B,EAA2C,QAA3C,EAAqDC,MAArD,CAAP;AACH,OAND,MAMO;AACH,eAAO,IAAP;AACH;AACJ;AAvCL;AAAA;AAAA,gCAyCgBU,GAzChB,EAyCqBC,GAzCrB,EAyC0BC,IAzC1B,EAyCgC;AACxB,UAAIC,OAAO,GAAG,IAAIjB,OAAJ,CAAYc,GAAZ,EAAiBC,GAAjB,EAAsB,EAAtB,CAAd;AACAE,MAAAA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,CAAsBH,IAAtB,EAFwB,CAGxB;;AACA,aAAOlB,KAAK,CAACsB,GAAN,CAAU,oDAAoDC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAD,CAAhF,CAAP;AACH;AA9CL;AAAA;AAAA,iCAgDiB;AACT,UAAIO,IAAI,GAAG,CACP,IAAIzB,IAAJ,CAAS,SAAT,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,UAA1B,EAAsC,CAAtC,EAAyC,CAAzC,CADO,EAEP,IAAIA,IAAJ,CAAS,UAAT,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,UAA3B,EAAuC,CAAvC,EAA0C,CAA1C,CAFO,EAGP,IAAIA,IAAJ,CAAS,iBAAT,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,UAAlC,EAA8C,CAA9C,EAAiD,CAAjD,CAHO,CAAX;AAKA,aAAOyB,IAAP;AACH;AAvDL;AAAA;AAAA,qCAyDqB;AACb,UAAIhB,MAAM,GAAG,KAAKF,WAAL,CAAiB,gBAAjB,EAAmC,MAAnC,EAA2C,EAA3C,CAAb;AACAE,MAAAA,MAAM,CAACiB,IAAP,CAAY,UAAUC,QAAV,EAAoB;AAC5BC,QAAAA,KAAK,CAACD,QAAQ,CAACE,IAAV,CAAL;AACH,OAFD,EAGKC,KAHL,CAGW,UAAUC,KAAV,EAAiB;AACpBH,QAAAA,KAAK,CAACG,KAAD,CAAL;AACH,OALL;AAMH;AAjEL;;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nimport { Task } from './task.js';\nimport { Wrapper } from './wrapper.js';\nimport { Select } from './select.js';\n\n\nexport class Database {\n    \n    select(storeName, params) {\n        if (!params) {\n            var cond = \"id > 0\";\n            params = new Select(cond, 10);\n        }\n        return this.sendRequest(storeName + \"Controller\", \"select\", params);\n    }\n\n    submit(storeName, entity) {\n        var result;\n        console.log(entity[\"id_\" + storeName.toLowerCase()]);\n        if (entity[\"id_\" + storeName.toLowerCase()]) {\n            result = this.sendRequest(storeName + \"Controller\", \"update\", entity);\n        } else {\n            result = this.sendRequest(storeName + \"Controller\", \"insert\", entity);\n        }\n        return result;\n    }\n\n    update(storeName, entity) {\n        if (entity) {\n            return this.sendRequest(storeName + \"Controller\", \"update\", entity);\n        }\n    }\n\n    delete(storeName, entity) {\n        //var c = confirm(\"Are you sure you want to delete?\\nThis action cannot be undone.\");\n        var c = true;\n        if (c) {\n            var idParam = \"id_\" + storeName.toLowerCase();\n            var params = {\n                [idParam]: entity[idParam]\n            };\n            return this.sendRequest(storeName + \"Controller\", \"delete\", params);\n        } else {\n            return null;\n        }\n    }\n\n    sendRequest(cls, mtd, json) {\n        var wrapper = new Wrapper(cls, mtd, []);\n        wrapper.datalist.push(json);\n        //var axios = require('axios');\n        return axios.get('http://localhost:8080/TaskMgmt/Controller?data=' + encodeURIComponent(JSON.stringify(wrapper)));\n    }\n\n    mockSelect() {\n        var list = [\n            new Task(\"Do work\", 1, 1, \"20180101\", 1, 0),\n            new Task(\"Test app\", 1, 1, \"20190822\", 2, 0),\n            new Task(\"Code TypeScript\", 1, 1, \"20190111\", 3, 0),\n        ]\n        return list;\n    }\n\n    testConnection() {\n        var result = this.sendRequest(\"TestController\", \"ping\", {});\n        result.then(function (response) {\n            alert(response.data);\n        })\n            .catch(function (error) {\n                alert(error);\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}