{"ast":null,"code":"import _classCallCheck from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gabriel/Documents/Projetos/React/atm-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gabriel/Documents/Projetos/React/atm-react/src/StatsViewer.js\";\nimport React from 'react';\nimport './index.css';\nimport { Database } from './model/database';\nimport { Utils } from './model/utils';\nexport var StatsViewer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StatsViewer, _React$Component);\n\n  function StatsViewer(props) {\n    var _this;\n\n    _classCallCheck(this, StatsViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatsViewer).call(this, props));\n    _this.state = {\n      compName: \"Stats\",\n      listTabIndex: [],\n      listTabOverdue: []\n    };\n    return _this;\n  }\n\n  _createClass(StatsViewer, [{\n    key: \"fetchIndexTable\",\n    value: function fetchIndexTable() {\n      var context = this;\n      var list = [];\n      var u = new Utils();\n      var db = new Database();\n      var filter = {\n        \"startingDate\": u.getDate()\n      };\n      var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n      r.then(function (response) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = response.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var json = _step.value;\n            list.push(json);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        context.setState({\n          listTabIndex: list\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"fetchOverdueTable\",\n    value: function fetchOverdueTable() {\n      var context = this;\n      var list = [];\n      var u = new Utils();\n      var db = new Database();\n      var filter = {\n        \"startingDate\": u.getDate()\n      };\n      var r = db.sendRequest(\"GraphController\", \"getOverdueGraph\", filter);\n      r.then(function (response) {\n        console.log(response);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = response.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var json = _step2.value;\n            list.push(json);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        context.setState({\n          listTabOverdue: list\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"createIndexTable\",\n    value: function createIndexTable() {\n      var header = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Task\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Days to deadline\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Priority Index\"));\n      var rows = this.state.listTabIndex.map(function (val) {\n        return React.createElement(\"tr\", {\n          key: val.id_task,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, val.id_task), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, val.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, val.priority), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, val.deadline), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, val.index));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Tasks by Priority Index (next 7 days)\"), React.createElement(\"div\", {\n        className: \"tableWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-responsive table-condensed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, header), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, rows))));\n    }\n  }, {\n    key: \"createOverdueTable\",\n    value: function createOverdueTable() {\n      var header = React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Task\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Priority\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Due Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Days overdue\"));\n      var rows = this.state.listTabOverdue.map(function (val) {\n        return React.createElement(\"tr\", {\n          key: val.id_task,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, val.id_task), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, val.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, val.priority), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, val.deadline), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, val.overdue));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Tasks Overdue (last 100 tasks)\"), React.createElement(\"div\", {\n        className: \"tableWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-responsive table-condensed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, header), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, rows))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      function a(callback) {\n        this.fetchIndexTable();\n\n        if (callback) {\n          callback();\n        }\n      }\n\n      a(this.fetchOverdueTable());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"ind: \" + this.state.listTabIndex.length);\n      console.log(\"ovd: \" + this.state.listTabOverdue.length);\n\n      if (this.state.listTabIndex && this.state.listTabOverdue) {\n        var tb1 = this.createIndexTable();\n        var tb2 = this.createOverdueTable();\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, tb1, tb2);\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }]);\n\n  return StatsViewer;\n}(React.Component);\nexport default StatsViewer;","map":{"version":3,"sources":["/home/gabriel/Documents/Projetos/React/atm-react/src/StatsViewer.js"],"names":["React","Database","Utils","StatsViewer","props","state","compName","listTabIndex","listTabOverdue","context","list","u","db","filter","getDate","r","sendRequest","then","response","data","json","push","setState","catch","error","console","log","header","rows","map","val","id_task","description","priority","deadline","index","overdue","a","callback","fetchIndexTable","fetchOverdueTable","length","tb1","createIndexTable","tb2","createOverdueTable","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAEI,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAFe;AAOlB;;AATL;AAAA;AAAA,sCAWsB;AACd,UAAIC,OAAO,GAAG,IAAd;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,CAAC,GAAG,IAAIT,KAAJ,EAAR;AACA,UAAIU,EAAE,GAAG,IAAIX,QAAJ,EAAT;AACA,UAAIY,MAAM,GAAG;AAAE,wBAAgBF,CAAC,CAACG,OAAF;AAAlB,OAAb;AACA,UAAIC,CAAC,GAAGH,EAAE,CAACI,WAAH,CAAe,iBAAf,EAAkC,uBAAlC,EAA2DH,MAA3D,CAAR;AACAE,MAAAA,CAAC,CAACE,IAAF,CAAO,UAAUC,QAAV,EAAoB;AAAA;AAAA;AAAA;;AAAA;AACvB,+BAAiBA,QAAQ,CAACC,IAA1B,8HAAgC;AAAA,gBAAvBC,IAAuB;AAC5BV,YAAAA,IAAI,CAACW,IAAL,CAAUD,IAAV;AACH;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIvBX,QAAAA,OAAO,CAACa,QAAR,CAAiB;AACbf,UAAAA,YAAY,EAAEG;AADD,SAAjB;AAGH,OAPD,EAQKa,KARL,CAQW,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL;AAWH;AA7BL;AAAA;AAAA,wCA+BwB;AAChB,UAAIf,OAAO,GAAG,IAAd;AACA,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,CAAC,GAAG,IAAIT,KAAJ,EAAR;AACA,UAAIU,EAAE,GAAG,IAAIX,QAAJ,EAAT;AACA,UAAIY,MAAM,GAAG;AAAE,wBAAgBF,CAAC,CAACG,OAAF;AAAlB,OAAb;AACA,UAAIC,CAAC,GAAGH,EAAE,CAACI,WAAH,CAAe,iBAAf,EAAkC,iBAAlC,EAAqDH,MAArD,CAAR;AACAE,MAAAA,CAAC,CAACE,IAAF,CAAO,UAAUC,QAAV,EAAoB;AACvBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AADuB;AAAA;AAAA;;AAAA;AAEvB,gCAAiBA,QAAQ,CAACC,IAA1B,mIAAgC;AAAA,gBAAvBC,IAAuB;AAC5BV,YAAAA,IAAI,CAACW,IAAL,CAAUD,IAAV;AACH;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKvBX,QAAAA,OAAO,CAACa,QAAR,CAAiB;AACbd,UAAAA,cAAc,EAAEE;AADH,SAAjB;AAGH,OARD,EASCa,KATD,CASO,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAXD;AAYH;AAlDL;AAAA;AAAA,uCAoDuB;AACf,UAAIG,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,EAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFS,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHS,EAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJS,EAKT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALS,CAAb;AAOA,UAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWE,YAAX,CAAwBsB,GAAxB,CAA4B,UAACC,GAAD,EAAS;AAC5C,eAAO;AAAI,UAAA,GAAG,EAAEA,GAAG,CAACC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACC,OAAT,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACE,WAAT,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,GAAG,CAACG,QAAT,CAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,GAAG,CAACI,QAAT,CAJG,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,GAAG,CAACK,KAAT,CALG,CAAP;AAOH,OARU,CAAX;AAUA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAL,EACJ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,MADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,IADL,CAJJ,CADJ,CADI,CAAR;AAWH;AAjFL;AAAA;AAAA,yCAmFyB;AACjB,UAAID,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,EAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFS,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHS,EAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJS,EAKT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALS,CAAb;AAOA,UAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWG,cAAX,CAA0BqB,GAA1B,CAA8B,UAACC,GAAD,EAAS;AAC9C,eAAO;AAAI,UAAA,GAAG,EAAEA,GAAG,CAACC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACC,OAAT,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,GAAG,CAACE,WAAT,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,GAAG,CAACG,QAAT,CAHG,EAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,GAAG,CAACI,QAAT,CAJG,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,GAAG,CAACM,OAAT,CALG,CAAP;AAOH,OARU,CAAX;AAUA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAL,EACJ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,wCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,MADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,IADL,CAJJ,CADJ,CADI,CAAR;AAWH;AAhHL;AAAA;AAAA,wCAkHwB;AAChB,eAASS,CAAT,CAAYC,QAAZ,EAAqB;AACjB,aAAKC,eAAL;;AACA,YAAID,QAAJ,EAAa;AACTA,UAAAA,QAAQ;AACX;AACJ;;AAEDD,MAAAA,CAAC,CAAC,KAAKG,iBAAL,EAAD,CAAD;AACH;AA3HL;AAAA;AAAA,6BA6Ha;AACLf,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKrB,KAAL,CAAWE,YAAX,CAAwBkC,MAA9C;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKrB,KAAL,CAAWG,cAAX,CAA0BiC,MAAhD;;AACA,UAAI,KAAKpC,KAAL,CAAWE,YAAX,IAA2B,KAAKF,KAAL,CAAWG,cAA1C,EAA0D;AACtD,YAAIkC,GAAG,GAAG,KAAKC,gBAAL,EAAV;AACA,YAAIC,GAAG,GAAG,KAAKC,kBAAL,EAAV;AACA,eAAO;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFH,GADE,EAEFE,GAFE,CAAP;AAIH,OAPD,MAOO;AACH,eAAO;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;AACJ;AA1IL;;AAAA;AAAA,EAAiC5C,KAAK,CAAC8C,SAAvC;AA6IA,eAAe3C,WAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Database } from './model/database';\nimport { Utils } from './model/utils';\n\nexport class StatsViewer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            compName: \"Stats\",\n            listTabIndex: [],\n            listTabOverdue: []\n        }\n    }\n\n    fetchIndexTable() {\n        var context = this;\n        var list = [];\n        var u = new Utils();\n        var db = new Database();\n        var filter = { \"startingDate\": u.getDate() };\n        var r = db.sendRequest(\"GraphController\", \"getPriorityIndexGraph\", filter);\n        r.then(function (response) {\n            for (var json of response.data) {\n                list.push(json);\n            }\n            context.setState({\n                listTabIndex: list\n            });\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    fetchOverdueTable() {\n        var context = this;\n        var list = [];\n        var u = new Utils();\n        var db = new Database();\n        var filter = { \"startingDate\": u.getDate() };\n        var r = db.sendRequest(\"GraphController\", \"getOverdueGraph\", filter);\n        r.then(function (response) {\n            console.log(response);\n            for (var json of response.data) {\n                list.push(json);\n            }\n            context.setState({\n                listTabOverdue: list\n            });\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    createIndexTable() {\n        var header = <tr>\n            <th>ID</th>\n            <th>Task</th>\n            <th>Priority</th>\n            <th>Days to deadline</th>\n            <th>Priority Index</th>\n        </tr>;\n        var rows = this.state.listTabIndex.map((val) => {\n            return <tr key={val.id_task}>\n                <td>{val.id_task}</td>\n                <td>{val.description}</td>\n                <td>{val.priority}</td>\n                <td>{val.deadline}</td>\n                <td>{val.index}</td>\n            </tr>\n        });\n\n        return (<div><h2>Tasks by Priority Index (next 7 days)</h2>\n            <div className=\"tableWrapper\">\n                <table className=\"table table-responsive table-condensed\">\n                    <thead>\n                        {header}\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div></div>);\n    }\n\n    createOverdueTable() {\n        var header = <tr>\n            <th>ID</th>\n            <th>Task</th>\n            <th>Priority</th>\n            <th>Due Date</th>\n            <th>Days overdue</th>\n        </tr>;\n        var rows = this.state.listTabOverdue.map((val) => {\n            return <tr key={val.id_task}>\n                <td>{val.id_task}</td>\n                <td>{val.description}</td>\n                <td>{val.priority}</td>\n                <td>{val.deadline}</td>\n                <td>{val.overdue}</td>\n            </tr>\n        });\n\n        return (<div><h2>Tasks Overdue (last 100 tasks)</h2>\n            <div className=\"tableWrapper\">\n                <table className=\"table table-responsive table-condensed\">\n                    <thead>\n                        {header}\n                    </thead>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div></div>);\n    }\n\n    componentDidMount() {\n        function a (callback){\n            this.fetchIndexTable();\n            if (callback){\n                callback();\n            }\n        }\n        \n        a(this.fetchOverdueTable());\n    }\n\n    render() {\n        console.log(\"ind: \" + this.state.listTabIndex.length);\n        console.log(\"ovd: \" + this.state.listTabOverdue.length);\n        if (this.state.listTabIndex && this.state.listTabOverdue) {\n            var tb1 = this.createIndexTable();\n            var tb2 = this.createOverdueTable();\n            return <div className=\"mainWrapper\">\n                {tb1}\n                {tb2}\n            </div>\n        } else {\n            return <div className=\"mainWrapper\">Loading...</div>\n        }\n    }\n}\n\nexport default StatsViewer;"]},"metadata":{},"sourceType":"module"}